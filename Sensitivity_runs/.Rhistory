TB.out[i,iii]<-as.numeric(strsplit(rep.new[grep("TIME_SERIES",rep.new)+3+iii], " ")[[2]][5])
SumAge.out[i,iii]<-as.numeric(strsplit(rep.new[grep("TIME_SERIES",rep.new)+3+iii], " ")[[2]][6])
SPR.out[i,iii]<-as.numeric(strsplit(rep.new[grep("SPR_series",rep.new)+5+iii], " ")[[2]][8])
}
Dep.series.out<-SB.out/SB.out[,1]
Quant.out[i,1]<-as.numeric(strsplit(rep.new[grep("NatM_p_1_Fem_GP_1",rep.new)], " ")[[1]][3])
Quant.out[i,2]<-as.numeric(strsplit(rep.new[grep("L_at_Amin_Fem_GP_1",rep.new)], " ")[[1]][3])
Quant.out[i,3]<-as.numeric(strsplit(rep.new[grep("L_at_Amax_Fem_GP_1",rep.new)], " ")[[1]][3])
Quant.out[i,4]<-as.numeric(strsplit(rep.new[grep("VonBert_K_Fem_GP_1",rep.new)], " ")[[1]][3])
if(genders==T)
{
Quant.out[i,5]<-as.numeric(strsplit(rep.new[grep("NatM_p_1_Mal_GP_1",rep.new)], " ")[[1]][3])
Quant.out[i,6]<-as.numeric(strsplit(rep.new[grep("L_at_Amin_Mal_GP_1",rep.new)], " ")[[1]][3])
Quant.out[i,7]<-as.numeric(strsplit(rep.new[grep("L_at_Amax_Mal_GP_1",rep.new)], " ")[[1]][3])
Quant.out[i,8]<-as.numeric(strsplit(rep.new[grep("VonBert_K_Mal_GP_1",rep.new)], " ")[[1]][3])
}
if(SR_type<8){Quant.out[i,9]<-as.numeric(strsplit(rep.new[grep("SR_BH_steep",rep.new)], " ")[[1]][3])}
if(SR_type>=8){Quant.out[i,9]<-as.numeric(strsplit(rep.new[grep("SR_RkrPower_steep",rep.new)], " ")[[1]][3])}
if(SR_type>=8){Quant.out[i,29]<-as.numeric(strsplit(rep.new[grep("SR_RkrPower_gamma",rep.new)], " ")[[1]][3])}
Quant.out[i,10]<-as.numeric(strsplit(rep.new[grep("R0",rep.new)], " ")[[1]][3])
Quant.out[i,11]<-as.numeric(strsplit(rep.new[grep("SSB_Initial",rep.new)], " ")[[1]][3])
Quant.out[i,12]<-as.numeric(strsplit(rep.new[grep(paste("SSB_",sb_ofl_yrs[1],sep=""),rep.new)], " ")[[1]][3])
Quant.out[i,13]<-as.numeric(strsplit(rep.new[grep(paste("SSB_",sb_ofl_yrs[1],sep=""),rep.new)], " ")[[1]][3])/as.numeric(strsplit(rep.new[grep("SSB_Initial",rep.new)], " ")[[1]][3])
Quant.out[i,14]<-as.numeric(strsplit(rep.new[grep(paste("OFLCatch_",sb_ofl_yrs[2],sep=""),rep.new)], " ")[[1]][3])
Quant.out[i,15]<-as.numeric(strsplit(rep.new[grep(paste("ForeCatch_",sb_ofl_yrs[2],sep=""),rep.new)], " ")[[1]][3])
Quant.out[i,16]<-as.numeric(strsplit(rep.new[grep("SSB_MSY",rep.new)], " ")[[1]][3])/as.numeric(strsplit(rep.new[grep("SSB_Initial",rep.new)], " ")[[1]][3])
Quant.out[i,17]<-as.numeric(strsplit(rep.new[grep("B_MSY/SSB_unfished",rep.new)], " ")[[1]][3])
#Quant.out[i,17]<-as.numeric(strsplit(forecast.file[grep("Maximum_Sustainable_Yield;_where_Yield_is_Dead_Catch",forecast.file)+14],split="[[:blank:]]+")[[1]][2])/as.numeric(strsplit(forecast.file[grep("BIO_Smry_unfished",forecast.file)],split="[[:blank:]]+")[[1]][2])
Quant.out[i,18]<-as.numeric(strsplit(rep.new[grep("Fstd_MSY",rep.new)], " ")[[1]][3])
Quant.out[i,19]<-as.numeric(strsplit(rep.new[grep("TOTAL",rep.new)], " ")[[1]][2])
Quant.out[i,20]<-as.numeric(strsplit(rep.new[grep("TOTAL",rep.new)+2], " ")[[1]][2])
Quant.out[i,21]<-as.numeric(strsplit(rep.new[grep("Convergence",rep.new)], " ")[[1]][2])
Quant.out[i,22]<-as.numeric(Dep.line[4])
Quant.out[i,23]<-as.numeric(strsplit(rep.new[grep(paste("Bratio_",as.numeric(Dep.line[1]),sep=""),rep.new)], " ")[[1]][3])
Quant.out[i,24]<-as.numeric(strsplit(rep.new[grep("R0",rep.new)], " ")[[1]][8])
Quant.out[i,25]<-as.numeric(strsplit(rep.new[grep(paste("F_",f_yr,sep=""),rep.new)], " ")[[1]][3])/as.numeric(strsplit(rep.new[grep("Fstd_MSY",rep.new)], " ")[[1]][3])
Quant.out[i,26]<-as.numeric(strsplit(rep.new[grep(paste("OFLCatch_",sb_ofl_yrs[3],sep=""),rep.new)], " ")[[1]][3])
Quant.out[i,27]<-as.numeric(strsplit(rep.new[grep(paste("ForeCatch_",sb_ofl_yrs[3],sep=""),rep.new)], " ")[[1]][3])
Quant.out[i,28]<-as.numeric(strsplit(rep.new[grep("Crash_Pen",rep.new)], " ")[[1]][2])
starter.new<-readLines(paste(filepath,"/starter.ss",sep=""))
par_line<-strsplit(starter.new[grep("ss.par",starter.new)], " ")[[1]]
par_line[1]<-0
starter.new[grep("ss.par",starter.new)]<-paste(par_line, collapse=" ")
write(starter.new,paste(filepath,"/starter.ss",sep=""))
if(Quant.out[i,28]<0.0001&Quant.out[i,14]<100000){i<-i+1}
else
{
if(n.bad==0){Quant.out.bad<-Quant.out[i,]}
if(n.bad>0){Quant.out.bad<-rbind(Quant.out.bad,Quant.out[i,])}
n.bad<-n.bad+1
}
}
}
print(paste0("Kept ",i-1))
ii<-ii+1
if(file.exists(paste(filepath,"/Report.sso",sep=""))){file.remove(paste(filepath,"/Forecast-report.sso",sep=""))}
if(file.exists(paste(filepath,"/Report.sso",sep=""))){file.remove(paste(filepath,"/Report.sso",sep=""))}
}
colnames(Quant.out)<-colnames(Quant.out.bad)<-c("M_f","L1_f","Linf_f","k_f","M_m","L1_m","Linf_m","k_m","h","R0","SB0",paste("SSB_",sb_ofl_yrs[1],sep=""),"Term_Yr_Dep",paste("OFL_",sb_ofl_yrs[2],sep=""),paste("AdjCatch_",sb_ofl_yrs[2],sep=""),"SBMSY/SB0","BMSY/B0","FMSY","-lnL","LL_survey","Gradient","Dep.Obs","Dep.Exp","R0_init",paste("F_",f_yr,"/FMSY",sep=""),paste("OFL_",sb_ofl_yrs[3],sep=""),paste("AdjCatch_",sb_ofl_yrs[3],sep=""),"Crash_penalty","Rick_gamma")
if(ncol(Input.draws)==10){colnames(Input.draws)<-c("h","Dep","M_f","L1_f","Linf_f","k_f","M_m","L1_m","Linf_m","k_m")}
if(ncol(Input.draws)==11){colnames(Input.draws)<-c("Sfrac","Dep","M_f","L1_f","Linf_f","k_f","Beta","M_m","L1_m","Linf_m","k_m")}
if(SR_type>=8 | h.in[1]==99 | BH_FMSY_comp==T)
{
Input.draws<-cbind(Input.draws,Input.draws.MQs,SR_expo.out,SRMQ_par)
ltcolnames<-length(colnames(Input.draws))
colnames(Input.draws)[c(ltcolnames-1,ltcolnames)]<-c("Beta","Obj_fxn")
}
end.time<-Sys.time()
Spp.quant.out<-list(Input.draws,Quant.out,SB.out,Dep.series.out,TB.out,SumAge.out,SPR.out,Quant.out.bad,ii-1,(as.numeric(end.time)-as.numeric(start.time))/60)
names(Spp.quant.out)<-c("Priors","Posteriors","SB_series","Rel_Stock_status_series","Total_Biomass","Summary_Biomass","SPR","Rejected_draws","Total draws","Runtime_minutes")
SSS.out<-Spp.quant.out
save(SSS.out,file=paste(filepath,"/SSS_out.DMP",sep=""))
return(Spp.quant.out)
}
Dir.in<-"C:/Users/Jason.Cope/Desktop/SST_AC/SST_P_1"
SSS_run<-SSS(filepath=Dir.in,
file.name=c("simple_pop.dat","simple_pop.ctl"),
reps=1000,
seed.in=19,
M.in=c(3,0.05,0.1,3,0.05,0.1),
Dep.in=c(2,0.84,0.2),
SR_type=9,
h.in=c(-2,0.779,0.152),
FMSY_M.in=c(30,0.694,0.1),
BMSY_B0.in=c(2,0.4,0.1),
L1.in=c(0,0,0,0),
Linf.in=c(0,0,0,0),
k.in=c(0,0,0,0),
Zfrac.Beta.in=c(-99,0.2,0.6,-99,0.5,2),
R_start=c(0,8.6),
sum_age=0,
sb_ofl_yrs=c(2011,2011,2012),
f_yr=2010,
year0=1901,
genders=T)
Dir.in<-"C:/Users/Jason.Cope/Desktop/SST_AC/SST_P_7"
SSS_run<-SSS(filepath=Dir.in,
file.name=c("simple_pop.dat","simple_pop.ctl"),
reps=1000,
seed.in=19,
M.in=c(3,0.05,0.1,3,0.05,0.1),
Dep.in=c(2,0.41,0.25),
SR_type=9,
h.in=c(-2,0.779,0.152),
FMSY_M.in=c(30,0.694,0.1),
BMSY_B0.in=c(2,0.4,0.1),
L1.in=c(0,0,0,0),
Linf.in=c(0,0,0,0),
k.in=c(0,0,0,0),
Zfrac.Beta.in=c(-99,0.2,0.6,-99,0.5,2),
R_start=c(0,8.6),
sum_age=0,
sb_ofl_yrs=c(2011,2011,2012),
f_yr=2010,
year0=1901,
genders=T)
q()
remove.packages("sss", lib="~/R/win-library/3.5")
library(devtools)
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
library(sss)
SSS
remove.packages("sss", lib="~/R/win-library/3.5")
install.packages("devtools")
library(devtools)
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
install.packages("devtools")
SSS
library(devtools)
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
library(sss)
install.packages(c("benchmarkme", "benchmarkmeData", "dbplyr", "gbm", "modelr", "sys"))
install.packages(c("BH", "checkmate", "class", "clipr", "codetools", "colorspace", "cowplot", "curl", "data.table", "dbplyr", "DescTools", "dplyr", "evaluate", "flexmix", "forcats", "GA", "gbm", "ggsignif", "git2r", "gplots", "haven", "Hmisc", "htmlTable", "kableExtra", "later", "lme4", "maptools", "mgcv", "modelr", "openssl", "prabclus", "ps", "purrr", "R6", "RcppArmadillo", "readr", "readxl", "rlang", "rsconnect", "rstudioapi", "stringi", "stringr", "tibble", "tinytex", "TropFishR", "xfun", "zip"), lib="C:/Users/Jason.Cope/Documents/R/R-3.5.2/library")
library(sss)
SSS
library(sss)
library(sss)
library(devtools)
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
library(devtools)
devtools::install_github("shcaba/SSS", build_vignettes = TRUE,force=TRUE)
RUN.SS
SSS
SSS
SSS()
SSS
Max.Year.C<-50
Min.Year.C<-1
SSreps<-5 #100 only 5 for now
FMSY_M.in<- 0.922 # Perciformes 0.922 sd 0.092
BMSY_B0.in<-0.353 # Perciformes 0.353 sd 0.114
M<-0.49
h<-0.7
Dep<-0.3
WAH.SSS.BH<-SSS(filepath="C:/Users/Jason.Cope/Desktop/helpwithsss",
file.name=c("WAH.dat","WAH.ctl"),
reps=SSreps,
seed.in=19,
M.in=c(0,M,0.2,0,M,0.2),
Dep.in=c(10,Dep,0.2),
SR_type=3, # BH?
h.in=c(10,h,0.1), #option 10 is rtnorm
FMSY_M.in=c(-4,FMSY_M.in,0.2),
BMSY_B0.in=c(-4,BMSY_B0.in,0.2),
L1.in=c(0,0,0,0),
Linf.in=c(0,0,0,0),
k.in=c(0,0,0,0),
Zfrac.Beta.in=c(-99,0.2,0.6,-99,0.5,2),
R_start=c(0,15),
doR0.loop=c(1,5.0,16.0,0.1),
sum_age=0,
sb_ofl_yrs=c(Max.Year.C,Max.Year.C+1,Max.Year.C+1),
f_yr=Max.Year.C,
year0=Min.Year.C,
genders=F)
library(devtools)
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
SSS
remove.packages("sss", lib="~/R/win-library/3.5")
library(devtools)
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
SSS
remove.packages("sss", lib="~/R/win-library/3.5")
library(devtools)
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
edit(SSS)
library(sss)
edit(SSS)
Max.Year.C<-50
Min.Year.C<-1
SSreps<-5 #100 only 5 for now
FMSY_M.in<- 0.922 # Perciformes 0.922 sd 0.092
BMSY_B0.in<-0.353 # Perciformes 0.353 sd 0.114
M<-0.49
h<-0.7
Dep<-0.3
WAH.SSS.BH<-SSS(filepath="C:/Users/Jason.Cope/Desktop/helpwithsss",
file.name=c("WAH.dat","WAH.ctl"),
reps=SSreps,
seed.in=19,
M.in=c(0,M,0.2,0,M,0.2),
Dep.in=c(10,Dep,0.2),
SR_type=3, # BH?
h.in=c(10,h,0.1), #option 10 is rtnorm
FMSY_M.in=c(-4,FMSY_M.in,0.2),
BMSY_B0.in=c(-4,BMSY_B0.in,0.2),
L1.in=c(0,0,0,0),
Linf.in=c(0,0,0,0),
k.in=c(0,0,0,0),
Zfrac.Beta.in=c(-99,0.2,0.6,-99,0.5,2),
R_start=c(0,15),
doR0.loop=c(1,5.0,16.0,0.1),
sum_age=0,
sb_ofl_yrs=c(Max.Year.C,Max.Year.C+1,Max.Year.C+1),
f_yr=Max.Year.C,
year0=Min.Year.C,
genders=F)
Dir.in <-"C:/Users/Jason.Cope/Desktop/Cabezon 2019/WA_Cab_DB_SRA_2017/SSS/SSS_BH_WA_Cab"
CAB.SSS.BH<-SSS(filepath= Dir.in, # location to run the model
file.name=c("wa_cab.dat","wa_cab.ctl"), # data and ctl file names
reps=10, # number of model runs
seed.in=19, # seed number
Dep.in=c(2, 0.60, 0.1), # c(distribution shape, mean, sd)
M.in=c(3, 0.25, 0.2, 3, 0.25, 0.2), # c(distrbution shape for females, mean for females, sd for females, distribution shape for males, mean for males, sd for males)
h.in=c(2, 0.70, 0.152), # c(distribution, mean, sd)
FMSY_M.in=c(-30,0.8,0.2), # c(distribution, mean, sd)
BMSY_B0.in=c(-2,0.4,0.05), # c(distribution, mean, sd)
R_start=c(0,5), # c( switch option, input value)
doR0.loop=c(1,2.1,10.1,0.5),
sb_ofl_yrs=c(2019,2020,2021), # projection years
f_yr=2018, # final year of the model
year0=1963, # start year of the model
genders=T # unique male and female M
)
Dir.in <-"C:/Users/Jason.Cope/Desktop/Cabezon 2019/WA_Cab_DB_SRA_2017/SSS/SSS_BH_WA_Cab"
CAB.SSS.BH<-SSS(filepath= Dir.in, # location to run the model
file.name=c("wa_cab.dat","wa_cab.ctl"), # data and ctl file names
reps=10, # number of model runs
seed.in=19, # seed number
Dep.in=c(2, 0.60, 0.1), # c(distribution shape, mean, sd)
M.in=c(3, 0.25, 0.2, 3, 0.25, 0.2), # c(distrbution shape for females, mean for females, sd for females, distribution shape for males, mean for males, sd for males)
h.in=c(2, 0.70, 0.152), # c(distribution, mean, sd)
FMSY_M.in=c(-30,0.8,0.2), # c(distribution, mean, sd)
BMSY_B0.in=c(-2,0.4,0.05), # c(distribution, mean, sd)
R_start=c(0,5), # c( switch option, input value)
doR0.loop=c(1,2.1,10.1,0.5),
sb_ofl_yrs=c(2019,2020,2021), # projection years
f_yr=2018, # final year of the model
year0=1963, # start year of the model
genders=T # unique male and female M
)
?uninstall
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
?SSS
mat_2_sel
SSS
library(sss)
SSS
remove.packages("sss", lib="~/R/win-library/3.5")
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
edit(SSS)
remove.packages("sss", lib="~/R/win-library/3.5")
SSS
SSS
SSS
SSS
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
library(sss)
edit(SSS)
devtools::install_github("r4ss/r4ss")
library(r4ss)
library(ggplot2)
library(plyr)
library(reshape2)
library(flextable)
library(officer)
gg_color_hue <- function(n)
{
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
SS_Sensi_plot<-function(model.summaries,
current.year,
mod.names,
filename.in="Sensi_RE_out.DMP",
CI=0.95,
TRP.in=0.4,
LRP.in=0.25,
sensi_xlab="Sensitivity scenarios",
ylims.in=c(-1,2,-1,2,-1,2,-1,2,-1,2,-1,2),
plot.figs=c(1,1,1,1,1,1),
sensi.type.breaks=NA,
anno.x=NA,
anno.y=NA,
anno.lab=NA)
{
if(missing(mod.names)){mod.names<-paste("model ",1:model.summaries$n)}
survey.lambda<-data.frame(rownames(t(model.summaries$likelihoods_by_fleet))[-1:-2],t(model.summaries$likelihoods_by_fleet[seq(1,dim(model.summaries$likelihoods_by_fleet)[1], 6),][-1:-2]),"Survey_lambda")
survey.like<-data.frame(rownames(t(model.summaries$likelihoods_by_fleet))[-1:-2],t(model.summaries$likelihoods_by_fleet[seq(2,dim(model.summaries$likelihoods_by_fleet)[1], 6),][-1:-2]),"Survey_likelihood")
Lt.lambda<-data.frame(rownames(t(model.summaries$likelihoods_by_fleet))[-1:-2],t(model.summaries$likelihoods_by_fleet[seq(3,dim(model.summaries$likelihoods_by_fleet)[1], 6),][-1:-2]),"Lt_lambda")
Lt.like<-data.frame(rownames(t(model.summaries$likelihoods_by_fleet))[-1:-2],t(model.summaries$likelihoods_by_fleet[seq(4,dim(model.summaries$likelihoods_by_fleet)[1], 6),][-1:-2]),"Lt_likelihood")
Age.lambda<-data.frame(rownames(t(model.summaries$likelihoods_by_fleet))[-1:-2],t(model.summaries$likelihoods_by_fleet[seq(5,dim(model.summaries$likelihoods_by_fleet)[1], 6),][-1:-2]),"Age_lambda")
Age.like<-data.frame(rownames(t(model.summaries$likelihoods_by_fleet))[-1:-2],t(model.summaries$likelihoods_by_fleet[seq(6,dim(model.summaries$likelihoods_by_fleet)[1], 6),][-1:-2]),"Age_likelihood")
parms<-model.summaries$pars
#rownames(parms)<-parms$Label
parms<-data.frame(parms$Label,parms[,1:(dim(parms)[2]-3)],"Parameters")
if(any(model.summaries$nsexes==1))
{
dev.quants<-rbind(
model.summaries$quants[model.summaries$quants$Label=="SSB_Unfished",1:(dim(model.summaries$quants)[2]-2)]/2,
(model.summaries$quants[model.summaries$quants$Label==paste0("SSB_",current.year),1:(dim(model.summaries$quants)[2]-2)])/2,
model.summaries$quants[model.summaries$quants$Label==paste0("Bratio_",current.year),1:(dim(model.summaries$quants)[2]-2)],
model.summaries$quants[model.summaries$quants$Label=="TotYield_SPRtgt",1:(dim(model.summaries$quants)[2]-2)]/2,
model.summaries$quants[model.summaries$quants$Label=="Fstd_SPRtgt",1:(dim(model.summaries$quants)[2]-2)]
)
#Extract SDs for use in the ggplots
dev.quants.SD<-c(
model.summaries$quantsSD[model.summaries$quantsSD$Label=="SSB_Unfished",1]/2,
(model.summaries$quantsSD[model.summaries$quantsSD$Label==paste0("SSB_",current.year),1])/2,
model.summaries$quantsSD[model.summaries$quantsSD$Label==paste0("Bratio_",current.year),1],
model.summaries$quantsSD[model.summaries$quantsSD$Label=="TotYield_SPRtgt",1]/2,
model.summaries$quantsSD[model.summaries$quantsSD$Label=="Fstd_SPRtgt",1]
)
}
if(any(model.summaries$nsexes==2))
{
dev.quants<-rbind(
model.summaries$quants[model.summaries$quants$Label=="SSB_Unfished",1:(dim(model.summaries$quants)[2]-2)],
model.summaries$quants[model.summaries$quants$Label==paste0("SSB_",current.year),1:(dim(model.summaries$quants)[2]-2)],
model.summaries$quants[model.summaries$quants$Label==paste0("Bratio_",current.year),1:(dim(model.summaries$quants)[2]-2)],
model.summaries$quants[model.summaries$quants$Label=="TotYield_SPRtgt",1:(dim(model.summaries$quants)[2]-2)],
model.summaries$quants[model.summaries$quants$Label=="Fstd_SPRtgt",1:(dim(model.summaries$quants)[2]-2)]
)
#Extract SDs for use in the ggplots
dev.quants.SD<-c(
model.summaries$quantsSD[model.summaries$quantsSD$Label=="SSB_Unfished",1],
(model.summaries$quantsSD[model.summaries$quantsSD$Label==paste0("SSB_",current.year),1]),
model.summaries$quantsSD[model.summaries$quantsSD$Label==paste0("Bratio_",current.year),1],
model.summaries$quantsSD[model.summaries$quantsSD$Label=="TotYield_SPRtgt",1],
model.summaries$quantsSD[model.summaries$quantsSD$Label=="Fstd_SPRtgt",1]
)
}
dev.quants.labs<-data.frame(c("SB0",paste0("SSB_",current.year),paste0("Bratio_",current.year),"MSY_SPR","F_SPR"),dev.quants,"Derived quantities")
colnames(survey.lambda)<-colnames(survey.like)<-colnames(Lt.lambda)<-colnames(Lt.like)<-colnames(Age.lambda)<-colnames(Age.like)<-colnames(parms)<-colnames(dev.quants.labs)<-c("Type",mod.names,"Label")
Like.parm.quants<-rbind(survey.like,survey.lambda,Lt.like,Lt.lambda,Age.like,Age.lambda,parms,dev.quants.labs)
Like.parm.quants.table.data<-as_grouped_data(Like.parm.quants,groups=c("Label"))
#as_flextable(Like.parm.quants.table.data)
write.csv(Like.parm.quants.table.data,paste0(Dir,"Likes_parms_devquants_table.csv"))
#Calcualte relative errors
dev.quants.mat<-as.matrix(dev.quants)
colnames(dev.quants.mat)<-1:dim(dev.quants.mat)[2]
rownames(dev.quants.mat)<-c("SB0",paste0("SSB_",current.year),paste0("Bratio_",current.year),"MSY_SPR","F_SPR")
#RE<-melt((as.matrix(dev.quants)-as.matrix(dev.quants)[,1])/as.matrix(dev.quants)[,1])
RE<-melt((dev.quants.mat-dev.quants.mat[,1])/dev.quants.mat[,1])[-1:-5,]
#Get values for plots
Dev.quants.temp<-as.data.frame(cbind(rownames(dev.quants.mat),dev.quants.mat[,-1]))
colnames(Dev.quants.temp)<-c("Metric",mod.names[-1])
Dev.quants.ggplot<-data.frame(melt(Dev.quants.temp,id.vars=c("Metric")),RE[,2:3])
colnames(Dev.quants.ggplot)<-c("Metric","Model_name","Value","Model_num_plot","RE")
Dev.quants.ggplot$Metric<-factor(Dev.quants.ggplot$Metric,levels=unique(Dev.quants.ggplot$Metric))
save(Dev.quants.ggplot,file=filename.in)
#Calculate RE values for reference model boxes
CI_DQs_RE<-((dev.quants[,1]+dev.quants.SD*qnorm(CI))-dev.quants[,1])/dev.quants[,1]
TRP<-(TRP.in-dev.quants[3,1])/dev.quants[3,1]
LRP<-(LRP.in-dev.quants[3,1])/dev.quants[3,1]
#Plot relative errors
four.colors<-gg_color_hue(5)
if(plot.figs[1]==1)
{
ggplot(Dev.quants.ggplot,aes(Model_num_plot,RE))+geom_point(aes(shape=Metric,color=Metric))+
geom_rect(aes(xmin=1,xmax=33,ymin=-CI_DQs_RE[1],ymax=CI_DQs_RE[1]),fill=NA,color=four.colors[1])+
geom_rect(aes(xmin=1,xmax=33,ymin=-CI_DQs_RE[2],ymax=CI_DQs_RE[2]),fill=NA,color=four.colors[2])+
geom_rect(aes(xmin=1,xmax=33,ymin=-CI_DQs_RE[3],ymax=CI_DQs_RE[3]),fill=NA,color=four.colors[3])+
geom_rect(aes(xmin=1,xmax=33,ymin=-CI_DQs_RE[4],ymax=CI_DQs_RE[4]),fill=NA,color=four.colors[4])+
geom_rect(aes(xmin=1,xmax=33,ymin=-CI_DQs_RE[5],ymax=CI_DQs_RE[5]),fill=NA,color=four.colors[5])+
if(!is.na(sensi.type.breaks)){geom_vline(xintercept =c(sensi.type.breaks),lty=2)}+
geom_hline(yintercept =c(TRP,LRP),lty=c(1,2),color=c("darkgreen","darkred"))+
scale_x_continuous(breaks = 2:model.summaries$n,labels=unique(Dev.quants.ggplot$Model_name))+
scale_y_continuous(limits=ylims.in[1:2])+
theme(axis.text.x = element_text(angle=90,vjust=0.25))+
labs(x = sensi_xlab,y = "Relative error")+
annotate("text",x=anno.x,y=anno.y,label=anno.lab)
ggsave("Sensi_REplot_all.pdf")
}
if(plot.figs[2]==1)
{
Dev.quants.ggplot.SB0<-subset(Dev.quants.ggplot,Metric == unique(Dev.quants.ggplot$Metric)[1])
ggplot(Dev.quants.ggplot.SB0,aes(Model_num_plot,RE))+geom_point(aes(shape=Metric,color=four.colors[1]))+
geom_rect(aes(xmin=1,xmax=33,ymin=-CI_DQs_RE[1],ymax=CI_DQs_RE[1]),fill=NA,color=four.colors[1])+
if(!is.na(sensi.type.breaks)){geom_vline(xintercept =c(sensi.type.breaks),lty=2)}+
geom_hline(yintercept =0,lty=1,color="gray")+
scale_x_continuous(breaks = 2:model.summaries$n,labels=unique(Dev.quants.ggplot.SB0$Model_name))+
scale_y_continuous(limits=ylims.in[3:4])+
theme(axis.text.x = element_text(angle=90,vjust=0.25))+
labs(x = sensi_xlab,y = "Relative error")+
annotate("text",x=anno.x,y=anno.y,label=anno.lab)
ggsave("Sensi_REplot_SB0.pdf")
}
if(plot.figs[3]==1)
{
Dev.quants.ggplot.SBt<-subset(Dev.quants.ggplot,Metric == unique(Dev.quants.ggplot$Metric)[2])
ggplot(Dev.quants.ggplot.SBt,aes(Model_num_plot,RE))+geom_point(aes(shape=Metric),color=four.colors[2])+
geom_rect(aes(xmin=1,xmax=33,ymin=-CI_DQs_RE[2],ymax=CI_DQs_RE[2]),fill=NA,color=four.colors[2])+
if(!is.na(sensi.type.breaks)){geom_vline(xintercept =c(sensi.type.breaks),lty=2)}+
geom_hline(yintercept =0,lty=1,color="gray")+
scale_x_continuous(breaks = 2:model.summaries$n,labels=unique(Dev.quants.ggplot.SBt$Model_name))+
scale_y_continuous(limits=ylims.in[5:6])+
theme(axis.text.x = element_text(angle=90,vjust=0.25))+
labs(x = sensi_xlab,y = "Relative error")+
annotate("text",x=anno.x,y=anno.y,label=anno.lab)
ggsave("Sensi_REplot_SBcurrent.pdf")
}
if(plot.figs[4]==1)
{
Dev.quants.ggplot.Dep<-subset(Dev.quants.ggplot,Metric == unique(Dev.quants.ggplot$Metric)[3])
ggplot(Dev.quants.ggplot.Dep,aes(Model_num_plot,RE))+geom_point(aes(shape=Metric),color=four.colors[3])+
geom_rect(aes(xmin=1,xmax=33,ymin=-CI_DQs_RE[3],ymax=CI_DQs_RE[3]),fill=NA,color=four.colors[3])+
if(!is.na(sensi.type.breaks)){geom_vline(xintercept =c(sensi.type.breaks),lty=2)}+
geom_hline(yintercept =c(TRP,LRP,0),lty=c(1,2,1),color=c("darkgreen","darkred","gray"))+
scale_x_continuous(breaks = 2:model.summaries$n,labels=unique(Dev.quants.ggplot.Dep$Model_name))+
scale_y_continuous(limits=ylims.in[7:8])+
theme(axis.text.x = element_text(angle=90,vjust=0.25))+
labs(x = sensi_xlab,y = "Relative error")+
annotate("text",x=anno.x,y=anno.y,label=anno.lab)
ggsave("Sensi_REplot_status.pdf")
}
if(plot.figs[5]==1)
{
Dev.quants.ggplot.MSY<-subset(Dev.quants.ggplot,Metric == unique(Dev.quants.ggplot$Metric)[4])
ggplot(Dev.quants.ggplot.MSY,aes(Model_num_plot,RE))+geom_point(aes(shape=Metric),color=four.colors[4])+
geom_rect(aes(xmin=1,xmax=33,ymin=-CI_DQs_RE[3],ymax=CI_DQs_RE[3]),fill=NA,color=four.colors[4])+
if(!is.na(sensi.type.breaks)){geom_vline(xintercept =c(sensi.type.breaks),lty=2)}+
geom_hline(yintercept =0,lty=1,color="gray")+
scale_x_continuous(breaks = 2:model.summaries$n,labels=unique(Dev.quants.ggplot.MSY$Model_name))+
scale_y_continuous(limits=ylims.in[9:10])+
theme(axis.text.x = element_text(angle=90,vjust=0.25))+
labs(x = sensi_xlab,y = "Relative error")+
annotate("text",x=anno.x,y=anno.y,label=anno.lab)
ggsave("Sensi_REplot_MSY.pdf")
}
if(plot.figs[6]==1)
{
Dev.quants.ggplot.FMSY<-subset(Dev.quants.ggplot,Metric == unique(Dev.quants.ggplot$Metric)[5])
ggplot(Dev.quants.ggplot.FMSY,aes(Model_num_plot,RE))+geom_point(aes(shape=Metric),color=four.colors[5])+
geom_rect(aes(xmin=1,xmax=33,ymin=-CI_DQs_RE[3],ymax=CI_DQs_RE[3]),fill=NA,color=four.colors[5])+
if(!is.na(sensi.type.breaks)){geom_vline(xintercept =c(sensi.type.breaks),lty=2)}+
geom_hline(yintercept =0,lty=1,color="gray")+
scale_x_continuous(breaks = 2:model.summaries$n,labels=unique(Dev.quants.ggplot.FMSY$Model_name))+
scale_y_continuous(limits=ylims.in[11:12])+
theme(axis.text.x = element_text(angle=90,vjust=0.25))+
labs(x = sensi_xlab,y = "Relative error")+
annotate("text",x=anno.x,y=anno.y,label=anno.lab)
ggsave("Sensi_REplot_FMSY.pdf")
}
}
Dir<-"C:/Users/Jason.Cope/Documents/GitHub/Stock-Assessment-Sensitivity-Plots/Sensitivity_runs/"
zz<-list()
Runs<-32
for(i in 1:Runs)
{
setwd(paste0(Dir,"Reference Model all data in_",i))
if(i==1){zz[[i]]<-SS_output(getwd())}
if(i>1){zz[[i]]<-SS_output(getwd(),covar=FALSE)}
}
setwd(Dir)
model.summaries<- SSsummarize(zz)
mod.names<-c(
"Reference",
"I: -CA dockside rec",
"I: -OR dockside rec",
"I: -WA dockside rec",
"I: -CA CPFV",
"I: -OR onboard",
"I: -AFSC Triennial",
"I: -NWFSC Trawl",
"I: -IPHC",
"LtC: -CA trawl",
"LtC: -CA non-trawl",
"LtC: -CA dockside rec",
"LtC: -OR-WA trawl",
"LtC: -OR-WA non-trawl",
"LtC: -OR dockside rec",
"LtC: -WA dockside rec",
"LtC: -CA CPFV",
"LtC: -OR onboard",
"LtC: -AFSC Triennial",
"LtC: -NWFSC Trawl",
"LtC: -IPHC",
"AgeC: -CA non-trawl",
"AgeC: -CA dockside rec",
"AgeC: -OR-WA trawl",
"AgeC: -OR-WA non-trawl",
"AgeC: -OR dockside rec",
"AgeC: -WA dockside rec",
"AgeC: -NWFSC Trawl",
"AgeC: -IPHC",
"-all indices",
"-all length comps",
"-all age comps"
)
library(r4ss)
model.summaries<- SSsummarize(zz)
devtools::install_github("r4ss/r4ss")
library(r4ss)
model.summaries<- SSsummarize(zz)
remove.packages("r4ss", lib="~/R/win-library/3.5")
devtools::install_github("r4ss/r4ss")
library(r4ss)
model.summaries<- SSsummarize(zz)
?any
shiny::runApp('~/GitHub/PSA-master/PSA-master')
runApp('~/GitHub/PSA-master/PSA-master')
